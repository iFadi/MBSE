// automatically generated by Xtext
grammar de.luh.se.mbse.network.textualeditor.Amf with org.eclipse.xtext.common.Terminals

generate amfDSL  "de.luh.se.mbse.network.textualeditor.Amf"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Network returns Network:
	'Network'
	name=EString
	'{'
		'statemachine' '{' statemachine+=Statemachine ( "," statemachine+=Statemachine)* '}' 
		'channel' '{' channel+=Channel ( "," channel+=Channel)* '}' 
	'}';





EString returns ecore::EString:
	STRING | ID;

Statemachine returns Statemachine:
	'Statemachine'
	name=EString
	'{'
		'InitState' InitState=[State|EString]
		'state' '{' state+=State ( "," state+=State)* '}' 
		'transition' '{' transition+=Transition ( "," transition+=Transition)* '}' 
	'}';

Channel returns Channel:
	{Channel}
	'Channel'
	name=EString
	'{'
		('Type' Type=TypeOfChannel)?
	'}';

State returns State:
	{State}
	'State'
	name=EString;

Transition returns Transition:
	{Transition}
	'Transition' source=[State|EString] '->' '(' channel=[Channel|EString]  ')' target=[State|EString] event=Event
;

enum Event returns Event:
				SEND = 'SEND' | RECEIVE = 'RECEIVE';

enum TypeOfChannel returns TypeOfChannel:
				SYN = 'SYN' | ASYN = 'ASYN';
